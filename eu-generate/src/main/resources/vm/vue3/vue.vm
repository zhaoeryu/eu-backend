<script setup lang="ts">
import { Refresh, Search } from '@element-plus/icons-vue';
import { ElMessage, ElMessageBox } from 'element-plus';
import type { TableInstance } from 'element-plus';
import { onMounted, useTemplateRef } from 'vue';

import { batchDel, page } from '@/api/business/contract';
import useLoading from '@/hooks/loading';
import { useResettableReactive } from '@/hooks/resettable';
import type { ${ClassName} } from '@/types/${apiPath}';
import { download } from '@/utils/request';
#if($enums)
import { #foreach($item in $enums)${item}#if($foreach.hasNext), #end#end } from '@/utils/business-enums';
#end

import ${ClassName}EditDialog from './${ClassName}EditDialog.vue';

#if($dicts)
defineOptions({
  dicts: [#foreach($item in $dicts)'${item}'#if($foreach.hasNext), #end#end],
});
#end

const DEFAULT_PAGE = {
  page: 1,
  size: 10,
  sort: [],
};

const ref${ClassName}EditDialog = useTemplateRef<InstanceType<typeof ${ClassName}EditDialog>>('ref${ClassName}EditDialog');
const refTable = useTemplateRef<TableInstance>('refTable');
const { loading, setLoading } = useLoading(false);
const [state, reset] = useResettableReactive({
  list: [],
  total: 0,
  isQueryShow: true,
  multipleDisabled: true,
  queryParams: {
#foreach($column in $columns)
  #if($column.queryType)
    $column.javaField: null,
  #end
#end
    ...DEFAULT_PAGE,
  },
});

onMounted(() => {
  onRefresh();
});

function onQuery() {
  setLoading(true);
  page(state.queryParams)
    .then((res) => {
      state.list = res.data.records;
      state.total = res.data.total;
    })
    .finally(() => {
      setLoading(false);
    });
}
function onRefresh() {
  reset('queryParams');
  onQuery();
}

function onAdd() {
  ref${ClassName}EditDialog.value?.open({} as ${ClassName});
}

function onExport() {
  download('/api/${apiPath}/export', state.queryParams, `${tableComment}#[[_${new Date().getTime()}.xlsx`]]#);
}

function onBatchDel() {
  const ids = refTable.value?.getSelectionRows().map((item) => item.id) ?? [];
  ElMessageBox.confirm(`确认要删除选中的${ids.length}条记录吗？`, '提示', {
    confirmButtonText: '确定',
    cancelButtonText: '取消',
    type: 'warning',
    beforeClose: (action, instance, done) => {
      if (action === 'confirm') {
        instance.confirmButtonLoading = true;
        batchDel(ids)
          .then(() => {
            ElMessage.success('删除成功');
            done();
            onRefresh();
          })
          .finally(() => {
            instance.confirmButtonLoading = false;
          });
      } else {
        done();
      }
    },
  });
}

function onSelectionChange(selection: ${ClassName}[]) {
  state.multipleDisabled = !selection.length;
}

function onRowUpdate(row: ${ClassName}) {
  ref${ClassName}EditDialog.value?.open(row);
}

function onRowDelete(row: ${ClassName}) {
  ElMessageBox.confirm(`确认要删除"#[[${row.]]#$delShowField}"吗？`, '提示', {
    confirmButtonText: '确定',
    cancelButtonText: '取消',
    type: 'warning',
    beforeClose: (action, instance, done) => {
      if (action === 'confirm') {
        instance.confirmButtonLoading = true;
        batchDel([row.id])
          .then(() => {
            ElMessage.success('删除成功');
            done();
            onRefresh();
          })
          .finally(() => {
            instance.confirmButtonLoading = false;
          });
      } else {
        done();
      }
    },
  });
}

function onSortComplete() {
  state.queryParams.page = DEFAULT_PAGE.page;
  onQuery();
}
</script>

<template>
  <div class="page-container">
    <div class="page-body">
      <query-expand-wrapper :show="state.isQueryShow">
        <el-form :model="state.queryParams" :inline="true">
#foreach($column in $columns)
#if($column.queryType)
          <el-form-item label="#if($column.finalColumnComment)$column.finalColumnComment#else$column.javaField#end" prop="${column.javaField}">
            #vue3ElTableQueryItem($column "          ")
          </el-form-item>
#end
#end
          <el-form-item>
            <el-button type="primary" :icon="Search" @click="onQuery">查询</el-button>
            <el-button :icon="Refresh" plain @click="onRefresh">重置</el-button>
          </el-form-item>
        </el-form>
      </query-expand-wrapper>
      <div v-loading="loading">
        <eu-table-toolbar
          v-model:sort="state.queryParams.sort"
          v-model:search-toggle="state.isQueryShow"
          :multiple-disabled="state.multipleDisabled"
          :opt-show="{
            import: false,
          }"
          :permission="{
            add: ['${permissionPrefix}:add'],
            del: ['${permissionPrefix}:del'],
            export: ['${permissionPrefix}:export'],
          }"
          :ref-table="refTable"
          @add="onAdd"
          @batchDel="onBatchDel"
          @export="onExport"
          @refresh="onRefresh"
          @sort="onSortComplete"
        />
        <el-table ref="refTable" :data="state.list" style="width: 100%" @selection-change="onSelectionChange">
          <el-table-column type="selection" fixed="left"></el-table-column>
#foreach($column in $columns)
#if($column.tableShow)
#if($column.dictKey || $column.enumKey)
          <el-table-column prop="${column.javaField}" label="${column.finalColumnComment}" width="120">
          #if($column.dictKey)
            <template #default="{ row }">
              <dict-text :value="row.${column.javaField}" dict-key="${column.dictKey}" />
            </template>
          #elseif($column.enumKey)
            <template #default="{ row }">
              <enum-tag :value="row.$column.javaField" :enums="$column.enumKey" />
            </template>
          #end
          </el-table-column>
#else
          <el-table-column prop="${column.javaField}" label="${column.finalColumnComment}" width="120" />
#end
#end
#end
          <el-table-column v-permissions="['${permissionPrefix}:edit', '${permissionPrefix}:del']" label="操作" width="150" fixed="right">
            <template #default="{ row }">
              <el-button v-permissions="['${permissionPrefix}:edit']" text type="primary" @click="onRowUpdate(row)">修改</el-button>
              <el-button v-permissions="['${permissionPrefix}:del']" text type="primary" @click="onRowDelete(row)">删除</el-button>
            </template>
          </el-table-column>
        </el-table>
        <pagination v-model:page="state.queryParams.page" v-model:limit="state.queryParams.size" :total="state.total" @pagination="onQuery" />
      </div>
    </div>

    <${classNameKebabCase}-edit-dialog ref="ref${ClassName}EditDialog" @complete="onRefresh" />
  </div>
</template>
